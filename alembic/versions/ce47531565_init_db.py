"""init_db

Revision ID: ce47531565
Revises: 
Create Date: 2015-10-12 16:39:01.341435

"""

# revision identifiers, used by Alembic.
revision = 'ce47531565'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address_map',
    sa.Column('discriminator', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('department',
    sa.Column('id', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phone_map',
    sa.Column('discriminator', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Unicode(length=128), nullable=False),
    sa.Column('username', sa.Unicode(length=32), nullable=True),
    sa.Column('password', sa.Unicode(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('type', sa.String(length=15), nullable=True),
    sa.Column('map_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['address_map.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=150), nullable=False),
    sa.Column('tin', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=50), nullable=True),
    sa.Column('account_code', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=False),
    sa.Column('updated_by', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('address_map_id', sa.Integer(), nullable=True),
    sa.Column('phone_map_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_map_id'], ['address_map.id'], ),
    sa.ForeignKeyConstraint(['phone_map_id'], ['phone_map.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('suffix', sa.String(length=10), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('civil_status', sa.String(length=10), nullable=True),
    sa.Column('position', sa.String(length=30), nullable=True),
    sa.Column('user_id', sa.Unicode(length=128), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=False),
    sa.Column('updated_by', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('address_map_id', sa.Integer(), nullable=True),
    sa.Column('phone_map_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_map_id'], ['address_map.id'], ),
    sa.ForeignKeyConstraint(['phone_map_id'], ['phone_map.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=150), nullable=True),
    sa.Column('type', sa.String(length=15), nullable=True),
    sa.Column('map_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['map_id'], ['phone_map.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_department',
    sa.Column('user_id', sa.Unicode(length=128), nullable=False),
    sa.Column('department_id', sa.String(length=3), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'department_id')
    )
    op.create_table('company_misc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company_type',
    sa.Column('type_id', sa.String(length=50), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('type_id', 'company_id')
    )
    op.create_table('contact_person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=10), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('position', sa.String(length=50), nullable=True),
    sa.Column('department', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contact_person')
    op.drop_table('company_type')
    op.drop_table('company_misc')
    op.drop_table('user_department')
    op.drop_table('phone')
    op.drop_table('employee')
    op.drop_table('company')
    op.drop_table('address')
    op.drop_table('user')
    op.drop_table('phone_map')
    op.drop_table('department')
    op.drop_table('address_map')
    ### end Alembic commands ###
